---
- name: reformat dict if necessary
  set_fact:
    restic_backups: "{{ restic_backups|dict2items|json_query('[*].value') }}"
  when:
    - restic_backups | type_debug == "dict"

- name: Create backup credentials
  template:
    src: restic_access_Linux.j2
    dest: "{{ restic_script_dir }}/access-{{ item.name | replace(' ', '') }}.sh"
    mode: '0700'
    owner: '{{ restic_dir_owner }}'
    group: '{{ restic_dir_group }}'
  no_log: "{{ restic_no_log }}"
  with_items: '{{ restic_backups }}'
  when:
    - item.name is defined
    - item.src is defined or item.stdin is defined
    - item.src is defined or item.stdin and item.stdin_cmd is defined
    - item.repo in restic_repos

- name: process default
  set_fact:
    _backups: '{{ _backups| default([]) + [item|combine({"type": item.type | default("single")})] }}'
  with_items: '{{ restic_backups }}'

- name: Split backups
  set_fact:
    single_backups: "{{ _backups | selectattr('type','equalto', 'single') }}"
    dir_backups: "{{ _backups | selectattr('type','equalto', 'dir') }}"
    multi_backups: "{{ _backups | selectattr('type','equalto', 'multi') }}"
  
- name: list folder for _dir_ backup
  find:
    paths: '{{ item.dir }}'
    recurse: no
    file_type: directory
    excludes: '{{item.dir_excl | default("")}}'
  with_items: '{{ dir_backups }}'
  register: dir_backup_paths

- set_fact:
    multi_backups: "{{ multi_backups + [item.item|combine({ 'type': 'multi', 'srcs': item.files|map(attribute='path') })] }}"
  with_items: '{{ dir_backup_paths.results }}'

- name: Create backup script single
  template:
    src: restic_script_Linux.j2
    dest: "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh"
    mode: '0700'
    owner: '{{ restic_dir_owner }}'
    group: '{{ restic_dir_group }}'
  no_log: "{{ restic_no_log }}"
  with_items: '{{ single_backups }}'
  when:
    - item.name is defined
    - item.src is defined or item.stdin is defined
    - item.src is defined or item.stdin and item.stdin_cmd is defined
    - item.repo in restic_repos

- name: Create backup script multi/dir
  template:
    src: restic_script_multi_Linux.j2
    dest: "{{ restic_script_dir }}/backup-{{ item.name | replace(' ', '') }}.sh"
    mode: '0700'
    owner: '{{ restic_dir_owner }}'
    group: '{{ restic_dir_group }}'
  no_log: "{{ restic_no_log }}"
  with_items: '{{ multi_backups }}'
  when:
    - item.name is defined
    - item.srcs is defined or item.stdin is defined
    - item.srcs is defined or item.stdin and item.stdin_cmds is defined
    - item.repo in restic_repos

